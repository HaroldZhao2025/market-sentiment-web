name: Build Data & Deploy Site

on:
  push:
    branches: ["main"]
  workflow_dispatch:
  schedule:
    - cron: "0 12 * * 1"

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: pages
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      PYTHONPATH: src
      HF_HUB_DISABLE_TELEMETRY: "1"

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: pip-${{ runner.os }}-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            pip-${{ runner.os }}-

      - name: Install Python deps
        run: |
          python -m pip install --upgrade pip wheel setuptools
          pip install --no-cache-dir "torch==2.3.1" --index-url https://download.pytorch.org/whl/cpu
          pip install --no-cache-dir -r requirements.txt
          pip check

      - name: Set Hugging Face cache dir
        run: echo "HF_HOME=$RUNNER_TEMP/hf-home" >> $GITHUB_ENV

      - name: Set dates (last 365 days)
        run: |
          python - <<'PY'
          import os
          from datetime import datetime, timedelta, timezone
          start=(datetime.now(timezone.utc)-timedelta(days=365)).strftime('%Y-%m-%d')
          end=datetime.now(timezone.utc).strftime('%Y-%m-%d')
          with open(os.environ['GITHUB_ENV'],'a') as f:
              f.write(f"START={start}\nEND={end}\n")
          print("START", start, "END", end)
          PY

      - name: Build S&P 500 universe
        run: python -m market_sentiment.cli.build_universe --out data/sp500.csv

      - name: Build JSON (FinBERT + Yahoo News + SEC/EDGAR)
        env:
          HF_HOME: ${{ env.HF_HOME }}
        run: |
          python -m market_sentiment.cli.build_json \
            --universe data/sp500.csv \
            --start "$START" --end "$END" \
            --out apps/web/public/data \
            --batch 16 \
            --max-workers 8 \
            --max-tickers 0

# .github/workflows/pipeline.yml  (replace the web steps with these)
      - name: Inspect output (debug)
        run: |
          echo "Data dir listing:"
          ls -lah apps/web/public/data || true
          python - <<'PY'
          import json, os, glob
          d="apps/web/public/data"
          tickers=json.load(open(os.path.join(d,"_tickers.json"))) if os.path.exists(os.path.join(d,"_tickers.json")) else []
          print("Tickers listed:", len(tickers))
          sample=[p for p in tickers[:5]]
          for t in sample:
              p=os.path.join(d,f"{t}.json")
              if os.path.exists(p):
                  j=json.load(open(p))
                  s=j.get("series",{})
                  S=s.get("S",[])
                  meanS = round(sum(abs(x) for x in S)/len(S),4) if S else 0.0
                  print(f"  {t}: points={len(S)}, mean|S|={meanS}")
          print("Portfolio present:", os.path.exists(os.path.join(d,"portfolio.json")))
          PY

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Install web deps
        working-directory: apps/web
        run: npm install --no-audit --no-fund

      - name: "Build static site (Next.js output: export)"
        working-directory: apps/web
        env:
          NEXT_TELEMETRY_DISABLED: "1"
          NEXT_PUBLIC_BASE_PATH: "/market-sentiment-web"
        run: |
          echo "==== next.config.cjs (contents) ===="
          sed -n '1,200p' next.config.cjs || true
          echo "==== Node/NPM ===="
          node -v
          npm -v
          echo "==== Building ===="
          npm run build
          echo "==== After build (ls) ===="
          ls -lah
          # Guard: ensure 'out' exists (export target)
          if [ ! -d "out" ]; then
            echo "::error::Expected 'apps/web/out' to exist after build, but it does not."
            exit 1
          fi

      - name: Upload artifact for Pages
        uses: actions/upload-pages-artifact@v3
        with:
          path: apps/web/out

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
