name: Build & Deploy â€” Sample AAPL

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: pages-sample
  cancel-in-progress: true

jobs:
  build-deploy:
    runs-on: ubuntu-latest
    env:
      PYTHONPATH: src
      HF_HUB_DISABLE_TELEMETRY: "1"
      HF_HOME: ${{ runner.temp }}/hf-home
      PIP_DISABLE_PIP_VERSION_CHECK: "1"
      PIP_NO_PYTHON_VERSION_WARNING: "1"
      NEXT_PUBLIC_BASE_PATH: /market-sentiment-web
      TSC_COMPILE_ON_ERROR: "true"
      # keep sample fast but non-empty
      NEWS_ITEMS_PER_SOURCE: "30"
      NEWS_SOURCES: "yfinance,google,bing,yahoofin,nasdaq"
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: "pip"

      - name: Install Python dependencies
        run: |
          python -m pip install -U pip wheel
          pip install torch --index-url https://download.pytorch.org/whl/cpu
          pip install pandas==2.2.2 numpy==1.26.4 yfinance==0.2.43 feedparser==6.0.11 tqdm==4.66.4 transformers==4.44.2 beautifulsoup4==4.12.3
          pip install -e .

      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"

      - name: Install Node dependencies
        run: npm ci --no-audit --no-fund

      - name: Build JSON (AAPL only)
        env:
          # 1-year window ending today (UTC)
          END: ${{ env.GITHUB_RUN_ATTEMPT }}
        run: |
          set -euxo pipefail
          END=$(date -u +%F)
          START=$(date -u -d "$END -365 days" +%F)
          mkdir -p data
          printf "ticker\nAAPL\n" > data/sample.csv
          python -m market_sentiment.cli.build_json \
            --universe data/sample.csv \
            --start "$START" --end "$END" \
            --out apps/web/public/data \
            --batch 16 \
            --cutoff-minutes 5 \
            --max-workers 4

      - name: Inspect generated data (AAPL)
        run: |
          python - << 'PY'
          import json, pathlib
          base = pathlib.Path("apps/web/public/data")
          tickers = json.loads(base.joinpath("_tickers.json").read_text())
          print("Tickers listed:", len(tickers))
          aapl_path = base / "ticker" / "AAPL.json"
          aapl = json.loads(aapl_path.read_text())
          ser = aapl.get("sentiment") or aapl.get("S") or []
          nz = sum(1 for x in ser if abs(x) > 1e-9)
          print("AAPL sentiment points:", len(ser))
          print("Non-zero points:", nz)
          if ser:
              print("First:", ser[0], "Last:", ser[-1])
          # show a couple of news titles if present
          news = aapl.get("news") or []
          print("News items:", len(news))
          print("Sample titles:", [n.get("title") for n in news[:3]])
          PY

      - name: Build static site (Next.js output: export)
        env:
          NEXT_TELEMETRY_DISABLED: "1"
          NEXT_PUBLIC_BASE_PATH: /market-sentiment-web
        run: |
          set -euxo pipefail
          echo "==== next.config.cjs (contents) ===="
          cat next.config.cjs || true
          echo "Node: $(node -v)  NPM: $(npm -v)"
          npm run build

          # If Next didn't produce out/, synthesize from .next + public
          if [ ! -d out ]; then
            echo "Warning: No 'out/' after build; synthesizing static export from '.next'..."
            mkdir -p out
            # prerendered routes from app dir
            if [ -d .next/server/app ]; then
              cp -r .next/server/app/* out/ || true
            fi
            # static assets for _next
            mkdir -p out/_next
            [ -d .next/static ] && cp -r .next/static out/_next/ || true
            # public assets (includes data/)
            [ -d public ] && cp -r public/* out/ || true
            # ensure base index
            if [ -f .next/server/app/index.html ]; then
              cp .next/server/app/index.html out/index.html || true
            fi
          fi

          echo "==== Final out/ listing (top) ===="
          find out -maxdepth 2 -type d -print

      - name: Setup Pages
        uses: actions/configure-pages@v5

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./out

      - name: Deploy to GitHub Pages
        uses: actions/deploy-pages@v4
