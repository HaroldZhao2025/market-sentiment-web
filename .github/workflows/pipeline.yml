name: Build Data & Deploy Site

on:
  push:
    branches: ["main"]
  workflow_dispatch:
  schedule:
    - cron: "0 12 * * 1"

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: pages
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      PYTHONPATH: src
      HF_HUB_DISABLE_TELEMETRY: "1"
      # Toggle sample run by setting repo variable SAMPLE_TICKER=true
      SAMPLE_TICKER: ${{ vars.SAMPLE_TICKER || 'false' }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: pip-${{ runner.os }}-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            pip-${{ runner.os }}-

      - name: Install Python deps
        run: |
          python -m pip install --upgrade pip wheel setuptools
          pip install --no-cache-dir "torch==2.3.1" --index-url https://download.pytorch.org/whl/cpu
          pip install --no-cache-dir -r requirements.txt
          pip check

      - name: Set Hugging Face cache dir
        run: echo "HF_HOME=$RUNNER_TEMP/hf-home" >> $GITHUB_ENV

      - name: Set dates (last 365 days)
        run: |
          python - <<'PY'
          import os
          from datetime import datetime, timedelta, timezone
          start=(datetime.now(timezone.utc)-timedelta(days=365)).strftime('%Y-%m-%d')
          end=datetime.now(timezone.utc).strftime('%Y-%m-%d')
          with open(os.environ['GITHUB_ENV'],'a') as f:
              f.write(f"START={start}\nEND={end}\n")
          print("START", start, "END", end)
          PY

      - name: Build S&P 500 universe
        run: python -m market_sentiment.cli.build_universe --out data/sp500.csv

      - name: (Optional) Narrow to AAPL if SAMPLE_TICKER=true
        run: |
          if [ "${SAMPLE_TICKER}" = "true" ]; then
            echo "SAMPLE_TICKER=true → restricting universe to AAPL"
            { head -n 1 data/sp500.csv && awk -F, 'NR>1 && $1=="AAPL"' data/sp500.csv; } > data/sp500.sample.csv
            mv data/sp500.sample.csv data/sp500.csv
          else
            echo "SAMPLE_TICKER=false → full universe"
          fi
          echo "Universe size:"
          wc -l data/sp500.csv
          echo "First few lines:"
          head -n 5 data/sp500.csv

      - name: Build JSON (FinBERT + Yahoo/Google News + SEC/EDGAR)
        env:
          HF_HOME: ${{ env.HF_HOME }}
        run: |
          echo "Running build_json for $(($(wc -l < data/sp500.csv)-1)) tickers"
          python -m market_sentiment.cli.build_json \
            --universe data/sp500.csv \
            --start "$START" --end "$END" \
            --out apps/web/public/data \
            --batch 16 \
            --cutoff-minutes 5 \
            --max-workers 8

      - name: Inspect output (debug)
        run: |
          echo "== List data dir =="
          ls -lah apps/web/public/data || true
          echo "== Peek tickers json =="
          if [ -f apps/web/public/data/_tickers.json ]; then
            head -c 400 apps/web/public/data/_tickers.json; echo
          fi
          echo "== Portfolio present? =="
          if [ -f apps/web/public/data/portfolio.json ]; then
            echo "Yes"; head -c 400 apps/web/public/data/portfolio.json; echo
          else
            echo "No"
          fi

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Install web deps
        working-directory: apps/web
        run: npm install --no-audit --no-fund

      - name: "Build static site (Next output: export)"
        working-directory: apps/web
        env:
          NEXT_TELEMETRY_DISABLED: "1"
          NEXT_PUBLIC_BASE_PATH: "/market-sentiment-web"
        run: |
          echo "==== next.config.cjs (contents) ===="
          cat next.config.cjs || true
          echo "==== Node/NPM ===="
          node -v
          npm -v
          echo "==== Building ===="
          npm run build
          echo "==== After build (ls) ===="
          ls -lah

          if [ ! -d out ]; then
            echo "::warning::No 'out/' after build; synthesizing static export from '.next'..."
            mkdir -p out
            # Pages HTML
            rsync -a .next/server/app/ out/
            # Static assets
            mkdir -p out/_next
            rsync -a .next/static/ out/_next/static/ || true
            # Public assets
            rsync -a public/ out/ || true
            # Fallback 404 for GH Pages
            cp out/index.html out/404.html 2>/dev/null || true
          fi

          echo "==== Final out/ listing ===="
          ls -lah out

      - name: Configure Pages
        uses: actions/configure-pages@v5

      - name: Upload artifact for Pages
        uses: actions/upload-pages-artifact@v3
        with:
          path: apps/web/out


  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
