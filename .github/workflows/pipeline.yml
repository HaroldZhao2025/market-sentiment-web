name: Build Data & Deploy Site

on:
  push:
    branches: ["main"]
  workflow_dispatch:
    inputs:
      SAMPLE_TICKER:
        description: "Run a lightweight sample build for AAPL only"
        required: false
        default: "false"
  schedule:
    - cron: "0 12 * * 1"

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: pages
  cancel-in-progress: true

env:
  PYTHONPATH: src
  HF_HUB_DISABLE_TELEMETRY: "1"
  SAMPLE_TICKER: ${{ github.event.inputs.SAMPLE_TICKER || 'false' }}

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: pip-${{ runner.os }}-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            pip-${{ runner.os }}-

      - name: Install Python deps
        run: |
          python -m pip install --upgrade pip wheel setuptools
          pip install --no-cache-dir "torch==2.3.1" --index-url https://download.pytorch.org/whl/cpu
          pip install --no-cache-dir -r requirements.txt
          pip check

      - name: Set Hugging Face cache dir
        run: echo "HF_HOME=$RUNNER_TEMP/hf-home" >> $GITHUB_ENV

      - name: Set dates (last 365 days)
        run: |
          python - <<'PY'
          import os
          from datetime import datetime, timedelta, timezone
          start=(datetime.now(timezone.utc)-timedelta(days=365)).strftime('%Y-%m-%d')
          end=datetime.now(timezone.utc).strftime('%Y-%m-%d')
          with open(os.environ['GITHUB_ENV'],'a') as f:
              f.write(f"START={start}\nEND={end}\n")
          print("START", start, "END", end)
          PY

      - name: Build S&P 500 universe
        run: python -m market_sentiment.cli.build_universe --out data/sp500.csv

      - name: Prepare sample universe (AAPL) if requested
        if: env.SAMPLE_TICKER == 'true'
        run: |
          mkdir -p data
          printf "ticker\nAAPL\n" > data/sample_aapl.csv

      - name: Build JSON (Full or Sample)
        env:
          HF_HOME: ${{ env.HF_HOME }}
        run: |
          if [ "${SAMPLE_TICKER}" = "true" ]; then
            echo "‚ö†Ô∏è Running sample build for AAPL only..."
            python -m market_sentiment.cli.build_json \
              --universe data/sample_aapl.csv \
              --start "$START" --end "$END" \
              --out apps/web/public/data \
              --batch 16 --max-workers 8 --max-tickers 1
          else
            echo "üèóÔ∏è Running full build for all tickers..."
            python -m market_sentiment.cli.build_json \
              --universe data/sp500.csv \
              --start "$START" --end "$END" \
              --out apps/web/public/data \
              --batch 16 --max-workers 8
          fi

      - name: Inspect output (debug)
        run: |
          echo "== List data dir =="
          ls -lah apps/web/public/data
          echo "== Peek a few =="
          head -c 120 apps/web/public/data/_tickers.json; echo
          ls apps/web/public/data/ticker | head -n 5
          echo

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Install web deps
        working-directory: apps/web
        run: npm install --no-audit --no-fund

      - name: "Build static site (Next 13 export)"
        working-directory: apps/web
        env:
          NEXT_TELEMETRY_DISABLED: "1"
          NEXT_PUBLIC_BASE_PATH: "/market-sentiment-web"
        run: |
          echo "==== next.config.cjs (contents) ===="
          cat next.config.cjs || true
          echo "==== Node/NPM ===="
          node -v
          npm -v
          echo "==== Building ===="
          npm run build
          echo "==== After export (ls) ===="
          ls -lah
          test -d out || { echo "::error::Expected 'apps/web/out' to exist after build, but it does not."; exit 1; }

      - name: Configure Pages
        uses: actions/configure-pages@v5

      - name: Upload artifact for Pages
        uses: actions/upload-pages-artifact@v3
        with:
          path: apps/web/out

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
